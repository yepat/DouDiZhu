{"version":3,"sources":["GameNet.js"],"names":["ByteArray","require","config","EventHelper","Protocol","Events","GameNet","cc","Class","extends","Component","statics","ip","sio","isPinging","fnDisconnect","handlers","addHandler","event","fn","connect","port","callback","self","WebSocket","binaryType","onopen","evt","console","log","onmessage","cmd","strdata","data","JSON","parse","receivedMsg","onclose","onerror","send","params","view","getView","close","code","Command","HeartBeat","Response","Alive","DispatchCustomEvent","MyNode","Login","Regist","OK","Game","NoLogin","handleLoginRoomResult","InitOk","CoinsNoMatchRoom","Queued","GameReady","TableTimesUpdate","SendCard","RefreshPlayerData","TurnCallLord","CallLord","TurnGrabLord","GrabLord","CallLordOver","CanDoubleResult","TurnSendCard","PlayerDelegated","PlayerSendCard","PlayerNotSend","PlayerShowCard","GameComplete","TableUserExit","InvalidCardNum","SayToTableInfo","response","succ","coinsNoMatchRoom","inGaming","msg","newRoomId","RoomId","name","Network","LoginRoomResult","ok","payload","noCoin"],"mappings":"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","file":"GameNet.js","sourceRoot":"../../../../../assets/Script/gameNetwork","sourcesContent":["\n\nvar ByteArray = require(\"ByteArray\");\nvar config = require(\"config\");\nvar EventHelper = require(\"EventHelper\");\nvar Protocol = require(\"Protocol\");\nvar Events = require(\"Events\");\n\nvar GameNet = cc.Class({\n    extends: cc.Component,\n    statics: {\n        ip:\"\",\n        sio:null,\n        isPinging:false,\n        fnDisconnect:null,\n        handlers:{},\n        addHandler:function(event,fn){\n            \n        },\n        connect:function(ip,port,callback){\n            var self = this;\n            self.callback = callback;\n            this.ip = ip + \":\" + port;\n            this.sio = new WebSocket(\"ws://\"+this.ip);\n            this.sio.binaryType = \"arraybuffer\";\n            this.sio.onopen = function(evt) { \n                console.log(\"Connection open \");\n                self.isPinging = true\n                self.callback();\n            };\n            this.sio.onmessage = function(evt) {\n                // console.log(evt.data);\n                // console.log(\"length:\"+evt.data.length)\n                var cmd = -1;//第八位是大协议号\n                var strdata = evt.data;\n                var data = JSON.parse(strdata);\n                self.receivedMsg(data,cmd);\n            };\n            this.sio.onclose = function(evt) {\n                console.log(\"Connection closed.\");\n                self.isPinging = false;\n            }; \n            this.sio.onerror = function(evt) {\n                console.log(\"Connection onerror.\"+ evt.data);\n                self.isPinging = false;\n            }; \n        },\n        send:function(event,cmd,params){\n            console.log(\"send:\"+event);\n            var view = ByteArray.getView(params,cmd);\n            if(this.sio)\n                this.sio.send(view);\n        },\n        close:function(){\n            if(this.sio)\n                this.sio.close();\n        },\n        receivedMsg(data,cmd){\n            // console.log(typeof(data));\n            // console.log(data);\n            cmd = data.cmd;\n            console.log(\"cmd:\"+cmd+\" code:\"+data.code);\n\n            if(cmd == Protocol.Command.HeartBeat){ //心跳\n                if(data.code == Protocol.Response.HeartBeat.Alive){\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"HeartBeat\",data);\n                }\n            }\n\n            if(cmd == Protocol.Command.Login){//登陆\n                if(data.code == Protocol.Response.Login.Regist){\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"Regist\",data);\n                }else if(data.code == Protocol.Response.Login.OK){\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"LoginOK\",data);\n                }\n            }\n\n            if(cmd == Protocol.Command.Game){\n                console.log(data);\n                if(data.code == Protocol.Response.Game.NoLogin){\n                    this.handleLoginRoomResult(data,data.code);\n                }else if(data.code == Protocol.Response.Game.InitOk){\n                    this.handleLoginRoomResult(data,data.code);\n                }else if(data.code == Protocol.Response.Game.CoinsNoMatchRoom){\n                    this.handleLoginRoomResult(data,data.code);\n                }else if(data.code == Protocol.Response.Game.Queued){\n                    //进入队列\n                    console.log(\"进入队列\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"Queued\",data);\n                }else if(data.code == Protocol.Response.Game.GameReady){\n                    //游戏准备好了\n                    console.log(\"游戏准备好了\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"GameReady\",data);\n                }else if(data.code == Protocol.Response.Game.TableTimesUpdate){\n                    //桌子的倍数发生改变\n                    console.log(\"桌子的倍数发生改变\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"TableTimesUpdate\",data);\n                }else if(data.code == Protocol.Response.Game.SendCard){\n                    //发牌, 包括各用户的牌信息\n                    console.log(\"发牌, 包括各用户的牌信息\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"SendCard\",data);\n                }else if(data.code == Protocol.Response.Game.RefreshPlayerData){\n                    //刷新用户金币(用户桌面)\n                    console.log(\"刷新用户金币\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"RefreshPlayerData\",data);\n                }else if(data.code == Protocol.Response.Game.TurnCallLord){\n                    //轮到谁叫地主\n                    console.log(\"轮到谁叫地主\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"TurnCallLord\",data);\n                }else if(data.code == Protocol.Response.Game.CallLord){\n                    //玩家叫地主\n                    console.log(\"玩家叫地主\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"CallLord\",data);\n                }else if(data.code == Protocol.Response.Game.TurnGrabLord){\n                    //轮到谁抢地主\n                    console.log(\"轮到谁抢地主\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"TurnGrabLord\",data);\n                }else if(data.code == Protocol.Response.Game.GrabLord){\n                    //玩家抢地主\n                    console.log(\"玩家抢地主\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"GrabLord\",data);\n                }else if(data.code == Protocol.Response.Game.CallLordOver){\n                    //叫地主结束\n                    console.log(\"叫地主结束\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"CallLordOver\",data);\n                }else if(data.code == Protocol.Response.Game.CanDoubleResult){\n                    //通知是否可以加倍\n                    console.log(\"通知是否可以加倍\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"CanDoubleResult\",data);\n                }else if(data.code == Protocol.Response.Game.TurnSendCard){\n                    //轮到谁出牌\n                    console.log(\"轮到谁出牌\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"TurnSendCard\",data);\n                }else if(data.code == Protocol.Response.Game.PlayerDelegated){\n                    //用户托管\n                    console.log(\"用户托管\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"PlayerDelegated\",data);\n                }else if(data.code == Protocol.Response.Game.PlayerSendCard){\n                    //用户出牌\n                    console.log(\"用户出牌\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"PlayerSendCard\",data);\n                }else if(data.code == Protocol.Response.Game.PlayerNotSend){\n                    //用户不出牌\n                    console.log(\"用户不出牌\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"PlayerNotSend\",data);\n                }else if(data.code == Protocol.Response.Game.PlayerShowCard){\n                    //用户明牌\n                    console.log(\"用户明牌\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"PlayerShowCard\",data);\n                }else if(data.code == Protocol.Response.Game.GameComplete){\n                    //本局结束\n                    console.log(\"本局结束\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"GameComplete\",data);\n                }else if(data.code == Protocol.Response.Game.TableUserExit){\n                    //有用户退出 通知桌上的玩家重新进入队列\n                    console.log(\"有用户退出 通知桌上的玩家重新进入队列\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"TableUserExit\",data);\n                }else if(data.code == Protocol.Response.Game.InvalidCardNum){\n                    ////出的牌不够大 [非法出牌]\n                    console.log(\"出的牌不够大 [非法出牌]\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"InvalidCardNum\",data);\n                }else if(data.code == Protocol.Response.Game.SayToTableInfo){\n                    ////聊天信息\n                    console.log(\"聊天信息\");\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"SayToTableInfo\",data);\n                }\n                //\n            }\n\n        },\n        handleLoginRoomResult(response, code){\n            var succ = true;\n            var coinsNoMatchRoom = false;\n            var inGaming = false;\n            var msg = null;\n            var newRoomId = null;\n\n            if (code == Protocol.Response.Game.NoLogin){\n                succ = false;\n                console.log(\"未登录\");\n                return;\n            }else if (code == Protocol.Response.Game.InitOk){\n                console.log(\"进入房间成功\");\n                if (response[\"data\"][\"isGaming\"] == 1){\n                    console.log(\"进入未完成牌局\");\n                    inGaming = true;\n                    succ = false;\n                    config.RoomId = response[\"data\"][\"roomId\"];\n                }\n            }else if (code == Protocol.Response.Game.CoinsNoMatchRoom){\n                console.log(\"进入房间失败\");\n                succ = false;\n                coinsNoMatchRoom = true;\n                msg = response[\"data\"][\"msg\"];\n                newRoomId = response[\"data\"][\"newRoomId\"];\n            }\n\n            var params = {};\n            params.name = Events.Network.LoginRoomResult;\n            params.ok = succ;\n            params.payload = response;\n            params.noCoin = coinsNoMatchRoom;\n            params.inGaming = inGaming;\n            params.msg = msg;\n            params.newRoomId = newRoomId;\n\n            console.log(\">>>>>>>>>>Events.Network.LoginRoomResult\");\n\n            EventHelper.DispatchCustomEvent(config.MyNode,Events.Network.LoginRoomResult,params);\n        }\n    },\n});"]}