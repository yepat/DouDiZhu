{"version":3,"sources":["GameNet.js"],"names":["ByteArray","require","config","EventHelper","Protocol","GameNet","cc","Class","extends","Component","statics","ip","sio","isPinging","fnDisconnect","handlers","addHandler","event","fn","connect","port","callback","self","WebSocket","binaryType","onopen","evt","console","log","onmessage","cmd","strdata","data","JSON","parse","receivedMsg","onclose","onerror","send","close","code","Command","HeartBeat","Response","Alive","DispatchCustomEvent","MyNode","Login","Regist","OK"],"mappings":"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","file":"GameNet.js","sourceRoot":"../../../../../assets/Script/gameNetwork","sourcesContent":["\n\nvar ByteArray = require(\"ByteArray\");\nvar config = require(\"config\");\nvar EventHelper = require(\"EventHelper\");\nvar Protocol = require(\"Protocol\");\n\nvar GameNet = cc.Class({\n    extends: cc.Component,\n    statics: {\n        ip:\"\",\n        sio:null,\n        isPinging:false,\n        fnDisconnect:null,\n        handlers:{},\n        addHandler:function(event,fn){\n            \n        },\n        connect:function(ip,port,callback){\n            var self = this;\n            self.callback = callback;\n            this.ip = ip + \":\" + port;\n            this.sio = new WebSocket(\"ws://\"+this.ip);\n            this.sio.binaryType = \"arraybuffer\";\n            this.sio.onopen = function(evt) { \n                console.log(\"Connection open \");\n                self.isPinging = true\n                self.callback();\n            };\n            this.sio.onmessage = function(evt) {\n                // console.log(evt.data);\n                // console.log(\"length:\"+evt.data.length)\n                \n                // var arr=[];\n                // var dataLength = 0;\n                var cmd = -1;//第八位是大协议号\n                // arr = evt.data.slice(0,16);\n                // for(var i = 0;i<arr.length;i++){\n                //     // var code  = arr[i].charCodeAt();\n                //     // console.log(a);\n                //     // if( i == 0){\n                //     //     dataLength = arr[i].charCodeAt();\n                //     //     console.log(\"0--:\"+dataLength);\n                //     // }\n                //     // if( i == 1){\n                //     //     dataLength = arr[i].charCodeAt();\n                //     //     console.log(\"1--:\"+dataLength);\n                //     // }\n                //     // if( i == 2){\n                //     //     dataLength = arr[i].charCodeAt();\n                //     //     console.log(\"2--:\"+dataLength);\n                //     // }\n                //     if( i == 3){\n                //         dataLength = arr[i].charCodeAt();\n                //     }\n                //     if(i == 7){\n                //         cmd = arr[i].charCodeAt();\n                //     }\n                // }\n\n                // console.log(\"cmd:\"+cmd+\" dataLength:\"+dataLength);\n                // var strdata = evt.data.slice(16,evt.data.length);\n                var strdata = evt.data;\n\n                // console.log(typeof(strdata));\n                // console.log(strdata)\n                var data = JSON.parse(strdata);\n                \n                // console.log(data)\n\n                self.receivedMsg(data,cmd);\n            };\n            this.sio.onclose = function(evt) {\n                console.log(\"Connection closed.\");\n                self.isPinging = false;\n            }; \n            this.sio.onerror = function(evt) {\n                console.log(\"Connection onerror.\"+ evt.data);\n                self.isPinging = false;\n            }; \n        },\n        send:function(event,data){\n            console.log(event);\n            if(this.sio)\n                this.sio.send(data);\n        },\n        close:function(){\n            if(this.sio)\n                this.sio.close();\n        },\n        receivedMsg(data,cmd){\n            // console.log(typeof(data));\n            // console.log(data);\n            cmd = data.cmd;\n            console.log(\"cmd:\"+cmd+\" code:\"+data.code);\n\n            if(cmd == Protocol.Command.HeartBeat){ //心跳\n                if(data.code == Protocol.Response.HeartBeat.Alive){\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"HeartBeat\",data);\n                }\n            }\n\n            if(cmd == Protocol.Command.Login){//登陆\n                if(data.code == Protocol.Response.Login.Regist){\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"Regist\",data);\n                }else if(data.code == Protocol.Response.Login.OK){\n                    EventHelper.DispatchCustomEvent(config.MyNode,\"LoginOK\",data);\n                }\n            }\n\n        }\n    },\n});"]}