{"version":3,"sources":["PokerControl.js"],"names":["config","require","CardUtil","cc","Class","extends","Component","properties","pokerNum","default","type","Sprite","pokerType","pokerType2","pokerBg","pokerLight","pokerDiZhu","pokerShow","canTouch","isTouched","cardData","isTopped","showPoker","showData","self","showType","cardValue","showTxt","numUrl","loader","loadRes","SpriteFrame","err","spriteFrame","getComponent","console","log","enabled","imgUrl","pokerCardType","spade","node","color","Color","hearts","redslice","blackberry","ghostCardType","bigG","smallG","setPokerLight","isVisible","setChoosed","isChoosed","cardMove","move","moveBy","easing","easeIn","runAction","cardMoveDown","setCardDiZhu","isEnabled","setCardShow","setMoveDown","setPokerBg","setScale","scale","scaleX","scaleY"],"mappings":"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","file":"PokerControl.js","sourceRoot":"../../../../assets/Script","sourcesContent":["\nvar config = require(\"config\");\nvar CardUtil = require(\"CardUtil\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        pokerNum : {\n            default : null,\n            type : cc.Sprite\n        },\n\n        pokerType : {\n            default : null,\n            type : cc.Sprite\n        },\n\n        pokerType2 : {\n            default : null,\n            type : cc.Sprite\n        },\n\n        pokerBg : {\n            default : null,\n            type : cc.Sprite\n        },\n        pokerLight : {\n            default : null,\n            type : cc.Sprite\n        },\n\n        pokerDiZhu : {\n            default : null,\n            type : cc.Sprite\n        },\n        pokerShow : {\n            default : null,\n            type : cc.Sprite\n        },\n\n        canTouch : false,\n        isTouched : false,\n        cardData : {\n            default : null,\n        },\n        isTopped:false,//是否被提起\n    },\n    //展示poker\n    showPoker : function(showData){\n        var self = this;\n        self.cardData = showData;\n        // self.pokerTxt.string = showData.showTxt;\n        var showType = showData.showType;\n        self.canTouch = showData.canTouch;\n\n        self.cardValue = showData.showTxt;//CardUtil.StringToNumber(showData.showTxt);\n        var numUrl = \"cards/poke_\" + self.cardValue;\n       \n        if(self.cardValue!=16&&self.cardValue!=17){\n            cc.loader.loadRes(numUrl,cc.SpriteFrame,function(err,spriteFrame){\n                self.pokerNum.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n            });\n\n            // cc.loader.loadRes(\"cards/blank_card\",cc.SpriteFrame,function(err,spriteFrame){\n            //     self.pokerBg.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n            // })\n        }\n        \n        console.log(\"\"+showData.showTxt+\":\"+self.cardValue);\n        \n        self.pokerDiZhu.enabled = false;\n        self.pokerLight.enabled = false;\n        self.pokerShow.enabled = false;\n        self.pokerType.enabled = true;\n        var imgUrl = \"cards/heitao\";\n        if(showType == config.pokerCardType.spade){\n            imgUrl = \"cards/heitao\";\n            self.pokerNum.node.color = new cc.Color(27, 27, 27);\n        }else if(showType == config.pokerCardType.hearts){\n            imgUrl = \"cards/hongxin\";\n            self.pokerNum.node.color = new cc.Color(246, 58, 27);\n        }else if(showType == config.pokerCardType.redslice){\n            imgUrl = \"cards/hongfang\";\n            self.pokerNum.node.color = new cc.Color(246, 58, 27);\n        }else if(showType == config.pokerCardType.blackberry){\n            imgUrl = \"cards/heimei\";\n            self.pokerNum.node.color = new cc.Color(27, 27, 27);\n        }else if(showType == config.ghostCardType.bigG){\n            self.pokerType.enabled = false;\n            self.pokerType2.enabled = false;\n            self.pokerNum.enabled = false;\n            cc.loader.loadRes(\"cards/joker_red\",cc.SpriteFrame,function(err,spriteFrame){\n                self.pokerBg.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n            })\n        }else if(showType == config.ghostCardType.smallG){\n            self.pokerType.enabled = false;\n            self.pokerType2.enabled = false;\n            self.pokerNum.enabled = false;\n            cc.loader.loadRes(\"cards/joker_black\",cc.SpriteFrame,function(err,spriteFrame){\n                self.pokerBg.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n            })\n        }\n        cc.loader.loadRes(imgUrl,cc.SpriteFrame,function(err,spriteFrame){\n            self.pokerType.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n            self.pokerType2.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n        })\n    },\n    setPokerLight(isVisible){\n        this.pokerLight.enabled = isVisible;\n    },\n    setChoosed(isTouched){ \n        this.cardData.isChoosed = isTouched;\n        this.pokerLight.enabled = isTouched;\n    },\n    cardMove(){\n        if(this.cardData.isChoosed&&this.cardData.isTopped){\n            var move = cc.moveBy(0.2,0,-30);\n            move.easing(cc.easeIn(3));\n            this.node.runAction(move);\n            this.cardData.isTopped = false;\n            this.cardData.isChoosed = false;\n            this.pokerLight.enabled = false;\n        }else if(this.cardData.isChoosed&&!this.cardData.isTopped){\n            var move = cc.moveBy(0.2,0,30);\n            move.easing(cc.easeIn(3));\n            this.node.runAction(move);\n            this.cardData.isTopped = true;\n            this.cardData.isChoosed = false;\n            this.pokerLight.enabled = false;\n        }\n    },\n    cardMoveDown(){\n        if(this.cardData.isTopped){\n            var move = cc.moveBy(0.2,0,-30);\n            move.easing(cc.easeIn(3));\n            this.node.runAction(move);\n            this.cardData.isTopped = false;\n            this.cardData.isChoosed = false;\n            this.pokerLight.enabled = false;\n        }\n    },\n    setCardDiZhu(isEnabled){\n        this.pokerDiZhu.enabled = isEnabled;\n    },\n    setCardShow(isEnabled){\n        this.pokerShow.enabled = isEnabled;\n    },\n    setMoveDown(){\n        this.cardData.isTopped = false;\n        this.cardData.isChoosed = false;\n        this.pokerLight.enabled = false;\n    },\n    setPokerBg(){\n        var self = this;\n        cc.loader.loadRes(\"cards/blank_card\",cc.SpriteFrame,function(err,spriteFrame){\n            self.pokerBg.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n        })\n    },\n    setScale(scale){\n        this.node.scaleX = scale;\n        this.node.scaleY = scale;\n    }\n});\n"]}